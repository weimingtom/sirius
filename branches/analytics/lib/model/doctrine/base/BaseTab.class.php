<?php

/**
 * BaseTab
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $owner_id
 * @property string $title
 * @property string $thread_ids
 * @property User $User
 * @property Doctrine_Collection $Threads
 * 
 * @method integer             getOwnerId()    Returns the current record's "owner_id" value
 * @method string              getTitle()      Returns the current record's "title" value
 * @method string              getThreadIds()  Returns the current record's "thread_ids" value
 * @method User                getUser()       Returns the current record's "User" value
 * @method Doctrine_Collection getThreads()    Returns the current record's "Threads" collection
 * @method Tab                 setOwnerId()    Sets the current record's "owner_id" value
 * @method Tab                 setTitle()      Sets the current record's "title" value
 * @method Tab                 setThreadIds()  Sets the current record's "thread_ids" value
 * @method Tab                 setUser()       Sets the current record's "User" value
 * @method Tab                 setThreads()    Sets the current record's "Threads" collection
 * 
 * @package    Sirius
 * @subpackage model
 * @author     Cary Yang <getcary@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTab extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tab');
        $this->hasColumn('owner_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('thread_ids', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '[]',
             'length' => '1000',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'owner_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Thread as Threads', array(
             'local' => 'id',
             'foreign' => 'tab_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}