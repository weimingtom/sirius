<?php

/**
 * BaseCronJob
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $minute
 * @property string $hour
 * @property string $day
 * @property string $month
 * @property string $job
 * @property integer $priority
 * @property boolean $enabled
 * @property boolean $run_once
 * @property integer $run_times
 * @property datetime $last_run
 * 
 * @method string   getMinute()    Returns the current record's "minute" value
 * @method string   getHour()      Returns the current record's "hour" value
 * @method string   getDay()       Returns the current record's "day" value
 * @method string   getMonth()     Returns the current record's "month" value
 * @method string   getJob()       Returns the current record's "job" value
 * @method integer  getPriority()  Returns the current record's "priority" value
 * @method boolean  getEnabled()   Returns the current record's "enabled" value
 * @method boolean  getRunOnce()   Returns the current record's "run_once" value
 * @method integer  getRunTimes()  Returns the current record's "run_times" value
 * @method datetime getLastRun()   Returns the current record's "last_run" value
 * @method CronJob  setMinute()    Sets the current record's "minute" value
 * @method CronJob  setHour()      Sets the current record's "hour" value
 * @method CronJob  setDay()       Sets the current record's "day" value
 * @method CronJob  setMonth()     Sets the current record's "month" value
 * @method CronJob  setJob()       Sets the current record's "job" value
 * @method CronJob  setPriority()  Sets the current record's "priority" value
 * @method CronJob  setEnabled()   Sets the current record's "enabled" value
 * @method CronJob  setRunOnce()   Sets the current record's "run_once" value
 * @method CronJob  setRunTimes()  Sets the current record's "run_times" value
 * @method CronJob  setLastRun()   Sets the current record's "last_run" value
 * 
 * @package    Sirius
 * @subpackage model
 * @author     Cary Yang <getcary@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCronJob extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cron_job');
        $this->hasColumn('minute', 'string', 16, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '*',
             'length' => '16',
             ));
        $this->hasColumn('hour', 'string', 16, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '*',
             'length' => '16',
             ));
        $this->hasColumn('day', 'string', 16, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '*',
             'length' => '16',
             ));
        $this->hasColumn('month', 'string', 16, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '*',
             'length' => '16',
             ));
        $this->hasColumn('job', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => '255',
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('enabled', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('run_once', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('run_times', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('last_run', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}